name: Build and Push Backend

on:
  push:
    branches:
      - main
      - stage
    paths:
      - backend/**
  pull_request:
    branches:
      - stage
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - run: pip install --upgrade pip
    - run: pip install -r backend/requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ github.sha }}
          ${{ runner.os }}-buildx-

    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: https://registry.cstrube.de
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Get the backend version
      id: get_version
      run: echo "VERSION=$(cat backend/VERSION)" >> $GITHUB_ENV

    - name: Set Docker Tags
      run: |
        BRANCH=$(echo "${GITHUB_REF##*/}" | tr / -)
        if [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/stage" ]; then
          BRANCH="stage"
        elif [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/main" ]; then
          BRANCH="main"
        fi
        echo "DOCKER_TAGS=registry.cstrube.de/etiketten-app/backend:${{ env.VERSION }}-${BRANCH},registry.cstrube.de/etiketten-app/backend:${BRANCH}" >> $GITHUB_ENV
        if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
          echo "DOCKER_TAGS=$DOCKER_TAGS,registry.cstrube.de/etiketten-app/backend:latest" >> $GITHUB_ENV
        fi

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: backend/Dockerfile
        push: true
        tags: ${{ env.DOCKER_TAGS }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max