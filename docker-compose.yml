services:
  backend:
    image: registry.cstrube.de/etiketten-app/backend:latest
    ports:
      - "8000:8000"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - etiketten-netzwerk
    environment:
      - DOCKER_REGISTRY_USERNAME=${DOCKER_REGISTRY_USERNAME}
      - DOCKER_REGISTRY_PASSWORD=${DOCKER_REGISTRY_PASSWORD}
    volumes:
      - backend-data:/app
      - ./backend/app/.env:/app/.env:ro

  frontend:
    image: registry.cstrube.de/etiketten-app/frontend:latest
    env_file:
      - .env
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - etiketten-netzwerk
    environment:
      - DOCKER_REGISTRY_USERNAME=${DOCKER_REGISTRY_USERNAME}
      - DOCKER_REGISTRY_PASSWORD=${DOCKER_REGISTRY_PASSWORD}
    volumes:
      - ./frontend/.env:/app/.env:ro

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_DISCORD_WEBHOOK_URL}
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=srv-api-backend-prod
      - WATCHTOWER_NOTIFICATION_SLACK_ICON_EMOJI=`:rocket:`
      - TZ=Europe/Berlin
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - REPO_USER=${DOCKER_REGISTRY_USERNAME}
      - REPO_PASS=${DOCKER_REGISTRY_PASSWORD}
      - REPO_URL=${DOCKER_REGISTRY_URL}

networks:
  etiketten-netzwerk:
    driver: bridge

volumes:
  backend-data: